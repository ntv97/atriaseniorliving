// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             (unknown)
// source: waitstaff.proto

package gen

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	WaitstaffService_GetListOrderFulfillment_FullMethodName = "/atria.seniorliving.proto.itemsapi.WaitstaffService/GetListOrderFulfillment"
	WaitstaffService_PlaceOrder_FullMethodName              = "/atria.seniorliving.proto.itemsapi.WaitstaffService/PlaceOrder"
)

// WaitstaffServiceClient is the client API for WaitstaffService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type WaitstaffServiceClient interface {
	GetListOrderFulfillment(ctx context.Context, in *GetListOrderFulfillmentRequest, opts ...grpc.CallOption) (*GetListOrderFulfillmentResponse, error)
	PlaceOrder(ctx context.Context, in *PlaceOrderRequest, opts ...grpc.CallOption) (*PlaceOrderResponse, error)
}

type waitstaffServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewWaitstaffServiceClient(cc grpc.ClientConnInterface) WaitstaffServiceClient {
	return &waitstaffServiceClient{cc}
}

func (c *waitstaffServiceClient) GetListOrderFulfillment(ctx context.Context, in *GetListOrderFulfillmentRequest, opts ...grpc.CallOption) (*GetListOrderFulfillmentResponse, error) {
	out := new(GetListOrderFulfillmentResponse)
	err := c.cc.Invoke(ctx, WaitstaffService_GetListOrderFulfillment_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *waitstaffServiceClient) PlaceOrder(ctx context.Context, in *PlaceOrderRequest, opts ...grpc.CallOption) (*PlaceOrderResponse, error) {
	out := new(PlaceOrderResponse)
	err := c.cc.Invoke(ctx, WaitstaffService_PlaceOrder_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WaitstaffServiceServer is the server API for WaitstaffService service.
// All implementations should embed UnimplementedWaitstaffServiceServer
// for forward compatibility
type WaitstaffServiceServer interface {
	GetListOrderFulfillment(context.Context, *GetListOrderFulfillmentRequest) (*GetListOrderFulfillmentResponse, error)
	PlaceOrder(context.Context, *PlaceOrderRequest) (*PlaceOrderResponse, error)
}

// UnimplementedWaitstaffServiceServer should be embedded to have forward compatible implementations.
type UnimplementedWaitstaffServiceServer struct {
}

func (UnimplementedWaitstaffServiceServer) GetListOrderFulfillment(context.Context, *GetListOrderFulfillmentRequest) (*GetListOrderFulfillmentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetListOrderFulfillment not implemented")
}
func (UnimplementedWaitstaffServiceServer) PlaceOrder(context.Context, *PlaceOrderRequest) (*PlaceOrderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PlaceOrder not implemented")
}

// UnsafeWaitstaffServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to WaitstaffServiceServer will
// result in compilation errors.
type UnsafeWaitstaffServiceServer interface {
	mustEmbedUnimplementedWaitstaffServiceServer()
}

func RegisterWaitstaffServiceServer(s grpc.ServiceRegistrar, srv WaitstaffServiceServer) {
	s.RegisterService(&WaitstaffService_ServiceDesc, srv)
}

func _WaitstaffService_GetListOrderFulfillment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetListOrderFulfillmentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WaitstaffServiceServer).GetListOrderFulfillment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: WaitstaffService_GetListOrderFulfillment_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WaitstaffServiceServer).GetListOrderFulfillment(ctx, req.(*GetListOrderFulfillmentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WaitstaffService_PlaceOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PlaceOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WaitstaffServiceServer).PlaceOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: WaitstaffService_PlaceOrder_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WaitstaffServiceServer).PlaceOrder(ctx, req.(*PlaceOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// WaitstaffService_ServiceDesc is the grpc.ServiceDesc for WaitstaffService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var WaitstaffService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "atria.seniorliving.proto.itemsapi.WaitstaffService",
	HandlerType: (*WaitstaffServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetListOrderFulfillment",
			Handler:    _WaitstaffService_GetListOrderFulfillment_Handler,
		},
		{
			MethodName: "PlaceOrder",
			Handler:    _WaitstaffService_PlaceOrder_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "waitstaff.proto",
}
